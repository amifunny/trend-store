{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","className","inline","Control","name","placeholder","onChange","target","value","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","techIcons","githubID","fluid","Row","Col","md","tech","i","href","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","interval","Image","banner","alt","HomeScreen","search","sm","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBanner","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","uploadBannerHandler","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"ioBAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QCjCnBC,EAAgB,gBAChBC,EAAmB,mBAEnBC,EAA6B,6BAE7BC,EAA2B,2BAE3BC,EAAmB,mBCPnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAGlBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBClCpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAGtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCK7BC,GAAUC,0BAAgB,CAC5BC,YCD8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAKnF,EACD,MAAO,CAAEoF,SAAS,EAAMH,SAAU,IAEtC,KAAKhF,EACD,MAAO,CACHmF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,KAAMJ,EAAOG,QAAQC,KACrBC,MAAOL,EAAOG,QAAQE,OAG9B,KAAKrF,EACD,MAAO,CAAEkF,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDffS,eCqBiC,WAAmD,IAAlDT,EAAiD,uDAAzC,CAAEU,QAAS,CAAEC,QAAS,KAAQT,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAKhF,EACD,OAAO,aAAEiF,SAAS,GAASJ,GAE/B,KAAK5E,EACD,MAAO,CAAEgF,SAAS,EAAOM,QAASR,EAAOG,SAE7C,KAAKhF,EACD,MAAO,CAAE+E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDhCfY,cCqCgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK7E,EACD,MAAO,CAAE8E,SAAS,GAEtB,KAAK7E,EACD,MAAO,CAAE6E,SAAS,EAAOS,SAAS,GAEtC,KAAKrF,EACD,MAAO,CAAE4E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDhDfc,cCsDgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK1E,EACD,MAAO,CAAE2E,SAAS,GAEtB,KAAK1E,EACD,MAAO,CAAE0E,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAE5D,KAAK1E,EACD,MAAO,CAAEyE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKzE,EACD,MAAO,GAEX,QACI,OAAOoE,IDpEfe,cCyEgC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKtE,EACD,MAAO,CAAEuE,SAAS,GAEtB,KAAKtE,EACD,MAAO,CAAEsE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAE5D,KAAKtE,EACD,MAAO,CAAEqE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrE,EACD,MAAO,CAAE0E,QAAS,IAEtB,QACI,OAAOV,IDvFfgB,oBC6FsC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKlE,EACD,MAAO,CAAEmE,SAAS,GAEtB,KAAKlE,EACD,MAAO,CAAEkE,SAAS,EAAOS,SAAS,GAEtC,KAAK1E,EACD,MAAO,CAAEiE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKjE,EACD,MAAO,GAEX,QACI,OAAO4D,ID3GfiB,gBCgHkC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAK9D,EACD,MAAO,CAAE+D,SAAS,EAAMH,SAAU,IAEtC,KAAK3D,EACD,MAAO,CAAE8D,SAAS,EAAOH,SAAUC,EAAOG,SAE9C,KAAK9D,EACD,MAAO,CAAE6D,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,ID1HfkB,KE/BuB,WAA6D,IAA5DlB,EAA2D,uDAAnD,CAAEmB,UAAW,GAAIC,gBAAiB,IAAMlB,EAAW,uCACnF,OAAQA,EAAOC,MACX,KAAK3D,EACD,IAAM6E,EAAOnB,EAAOG,QACdiB,EAAYtB,EAAMmB,UAAUI,MAAK,SAAAC,GAAC,OAAIA,EAAEd,UAAYW,EAAKX,WAE/D,OAAIY,EACO,2BACAtB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUM,KAAI,SAAAD,GAAC,OAC5BA,EAAEd,UAAYY,EAAUZ,QAAUW,EAAOG,OAI1C,2BACAxB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBE,MAI5C,KAAK5E,EACD,OAAO,2BACAuD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,QAAO,SAAAF,GAAC,OAAIA,EAAEd,UAAYR,EAAOG,aAGpE,KAAK3D,EACD,OAAO,2BACAsD,GADP,IAEIoB,gBAAiBlB,EAAOG,UAGhC,KAAK1D,EACD,OAAO,2BACAqD,GADP,IAEI2B,cAAezB,EAAOG,UAG9B,KAAKzD,EACD,OAAO,2BACAoD,GADP,IAEImB,UAAW,KAGnB,QACI,OAAOnB,IFbf4B,UGN4B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKtD,EACD,MAAO,CAAEuD,SAAS,GAEtB,KAAKtD,EACD,MAAO,CAAEsD,SAAS,EAAOyB,SAAU3B,EAAOG,SAE9C,KAAKtD,EACD,MAAO,CAAEqD,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrD,EACD,MAAO,GAEX,QACI,OAAOgD,IHRf8B,aGa+B,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKlD,EACD,MAAO,CAAEmD,SAAS,GAEtB,KAAKlD,EACD,MAAO,CAAEkD,SAAS,EAAOyB,SAAU3B,EAAOG,SAE9C,KAAKlD,EACD,MAAO,CAAEiD,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKrD,EACD,MAAO,GAEX,QACI,OAAOgD,IH3Bf+B,YGiC8B,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAK/C,EACD,OAAO,2BAAK4C,GAAZ,IAAmBI,SAAS,IAEhC,KAAK/C,EACD,MAAO,CAAE+C,SAAS,EAAO4B,KAAM9B,EAAOG,SAE1C,KAAK/C,EACD,MAAO,CAAE8C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK9C,EACD,MAAO,CAAEyE,KAAM,IAGnB,QACI,OAAOhC,IHhDfiC,kBGqDoC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAK3C,EACD,MAAO,CAAE4C,SAAS,GAEtB,KAAK3C,GACD,MAAO,CAAE2C,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAE7D,KAAK3C,GACD,MAAO,CAAE0C,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK1C,GACD,MAAO,GAEX,QACI,OAAOqC,IHnEfkC,SGwE2B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKvC,GACD,MAAO,CAAEwC,SAAS,GAEtB,KAAKvC,GACD,MAAO,CAAEuC,SAAS,EAAO+B,MAAOjC,EAAOG,SAE3C,KAAKvC,GACD,MAAO,CAAEsC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKtC,GACD,MAAO,CAAEoE,MAAO,IAEpB,QACI,OAAOnC,IHtFfoC,WG2F6B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKnC,GACD,MAAO,CAAEoC,SAAS,GAEtB,KAAKnC,GACD,MAAO,CAAEmC,SAAS,EAAOS,SAAS,GAEtC,KAAK3C,GACD,MAAO,CAAEkC,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IHtGfqC,WG2G6B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKhC,GACD,MAAO,CAAEiC,SAAS,GAEtB,KAAKhC,GACD,MAAO,CAAEgC,SAAS,EAAOS,SAAS,GAEtC,KAAKxC,GACD,MAAO,CAAE+B,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK/B,GACD,MAAO,CAAE0D,KAAM,IAEnB,QACI,OAAOhC,IHxHfsC,YIpB8B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAK5B,GACD,MAAO,CACH6B,SAAS,GAGjB,KAAK5B,GACD,MAAO,CACH4B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAGtB,KAAK5B,GACD,MAAO,CACH2B,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAK3B,GACD,MAAO,GAGX,QACI,OAAOsB,IJJfwC,aIS+B,WAA6E,IAA5ExC,EAA2E,uDAAnE,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAAMlB,EAAW,uCAC3G,OAAQA,EAAOC,MACX,KAAKxB,GACD,OAAO,2BACAqB,GADP,IAEII,SAAS,IAGjB,KAAKxB,GACD,MAAO,CACHwB,SAAS,EACTmC,MAAOrC,EAAOG,SAGtB,KAAKxB,GACD,MAAO,CACHuB,SAAS,EACTI,MAAON,EAAOG,SAItB,QACI,OAAOL,IJ9Bf0C,SImC2B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKrB,GACD,MAAO,CACHsB,SAAS,GAGjB,KAAKrB,GACD,MAAO,CACHqB,SAAS,EACTS,SAAS,GAGjB,KAAK7B,GACD,MAAO,CACHoB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKpB,GACD,MAAO,GAEX,QACI,OAAOe,IJzDf2C,YI0F8B,WAAqC,IAApC3C,EAAmC,uDAA3B,CAAE4C,OAAQ,IAAM1C,EAAW,uCAClE,OAAQA,EAAOC,MACX,KAAKjB,GACD,MAAO,CACHkB,SAAS,GAGjB,KAAKjB,GACD,MAAO,CACHiB,SAAS,EACTwC,OAAQ1C,EAAOG,SAGvB,KAAKjB,GACD,MAAO,CACHgB,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKhB,GACD,MAAO,CACHuD,OAAQ,IAGhB,QACI,OAAO5C,IJlHf6C,UIwH4B,WAAqC,IAApC7C,EAAmC,uDAA3B,CAAE4C,OAAQ,IAAM1C,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKb,GACD,MAAO,CACHc,SAAS,GAGjB,KAAKb,GACD,MAAO,CACHa,SAAS,EACTwC,OAAQ1C,EAAOG,SAGvB,KAAKb,GACD,MAAO,CACHY,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJ1If8C,aI4D+B,WAAyB,IAAxB9C,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKV,GACD,MAAO,CACHW,SAAS,GAGjB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTS,SAAS,GAGjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKT,GACD,MAAO,GAEX,QACI,OAAOI,MJ/Eb+C,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE9CG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAO7CI,GAAe,CACjBnC,KAAM,CACFC,UAAW4B,GACX3B,gBAP2B4B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAAsB,IAQtDrB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAKLC,GAHDC,sBAAY5D,GAASwD,GAC/BK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,4HKzC5BM,OAnCf,WAAsB,IAAD,EACaC,mBAAS,IADtB,oBACVC,EADU,KACDC,EADC,KAGbC,EAAUC,eAUd,OACI,eAACC,GAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEP,EACAE,EAAQM,KAAR,oBAA0BR,EAA1B,YAEAE,EAAQM,KAAKN,EAAQM,KAAKN,EAAQO,SAASC,YAIhBC,UAAU,cAAcC,QAAM,EAA7D,UACI,cAACR,GAAA,EAAKS,QAAN,CACIxE,KAAK,OACLyE,KAAK,IACLC,YAAY,4BACZC,SAAU,SAACV,GAAD,OAAOL,EAAWK,EAAEW,OAAOC,QACrCP,UAAU,YAId,cAACQ,GAAA,EAAD,CACI9E,KAAK,SACL+E,QAAQ,SACRT,UAAU,YAHd,SAKI,cAAC,KAAD,U,gDCyFHU,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLlF,KAAM/C,IAHoB,EAQ1BkI,IADazD,EAPa,EAO1BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbZ,SAiBPC,KAAMC,IAAN,qBACLT,EADK,KAEnBI,GAnB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAKRT,EAAS,CACLlF,KAAM9C,EACNgD,QAASyF,IAxBiB,kDA6B9BT,EAAS,CACLlF,KAAM7C,EACN+C,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCc,0DAAR,yD,gBC/BfC,OApFf,WAEI,IACQrE,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFwD,EAAWe,cAMjB,OACI,iCACI,cAACC,GAAA,EAAD,CAAQ5B,UAAU,aAAa6B,GAAG,QAAQpB,QAAQ,QAAQqB,OAAO,KAAKC,kBAAgB,EAAtF,SACI,eAACC,GAAA,EAAD,WACI,cAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,eAACL,GAAA,EAAOM,MAAR,CAAclC,UAAU,aAAxB,UACI,cAAC,KAAD,CAAcA,UAAU,oBAD5B,mBAMJ,cAAC4B,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,eAACR,GAAA,EAAOS,SAAR,CAAiB1B,GAAG,mBAAmBX,UAAU,UAAjD,UACI,cAAC,GAAD,IACA,eAACsC,GAAA,EAAD,CAAKtC,UAAU,UAAf,UAEI,cAAC,iBAAD,CAAeiC,GAAG,QAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,UACI,sBAAKvC,UAAU,wDAAf,UACI,mBAAGA,UAAU,6BACb,+CAKX5C,EACG,eAACoF,GAAA,EAAD,CAAcxC,UAAU,oDACvByC,MAAOrF,EAAS+C,KAAMQ,GAAG,WAD1B,UAEI,cAAC,iBAAD,CAAesB,GAAG,WAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,wBAGJ,cAACF,GAAA,EAAYE,KAAb,CAAkBC,QApC5B,WAClB/B,GDyDoB,SAACA,GACzBrC,aAAaqE,WAAW,YACxBhC,EAAS,CAAElF,KAAMnD,IACjBqI,EAAS,CAAElF,KAAM5C,IACjB8H,EAAS,CAAElF,KAAMd,KACjBgG,EAAS,CAAElF,KAAMpC,SC3Be,uBAIA,cAAC,iBAAD,CAAe2I,GAAG,SAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,UACQ,sBAAKvC,UAAU,wDAAf,UACI,mBAAGA,UAAU,4BACb,gDAOvB5C,GAAYA,EAASyF,SAClB,eAACL,GAAA,EAAD,CAAaC,MAAM,QAAQ9B,GAAG,aAA9B,UACI,cAAC,iBAAD,CAAesB,GAAG,kBAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,sBAGJ,cAAC,iBAAD,CAAeT,GAAG,qBAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,yBAGJ,cAAC,iBAAD,CAAeT,GAAG,mBAAlB,SACI,cAACO,GAAA,EAAYE,KAAb,wC,qCCSzBI,OAhFf,WAEI,IAAMC,EAAY,CACd,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,IACA,cAAC,KAAD,KAcEC,EAAW,+BAGjB,OACI,mCAEI,cAAChB,GAAA,EAAD,CAAWhC,UAAU,aAAaiD,OAAK,EAAvC,SACA,cAACjB,GAAA,EAAD,UACC,eAACkB,GAAA,EAAD,WACC,eAACC,GAAA,EAAD,CAAKnD,UAAU,aAAaoD,GAAI,EAAhC,UACC,sBAAKpD,UAAU,cAAf,UACa,cAAC,KAAD,CAAcA,UAAU,SADrC,iBAIA,6CAjBG,iBAkBH,2CAjBA,yCAmBD,eAACmD,GAAA,EAAD,CAAKnD,UAAU,aAAaoD,GAAI,EAAhC,UACC,oDA7BG,CAChB,QACA,SACA,aACA,YACM,cA0BiBpG,KAAI,SAACqG,EAAKC,GAAN,OACZ,gCACmB,sBAAMtD,UAAU,OAAhB,SAAwB+C,EAAUO,KACpD,+BAAOD,MAFEC,SAOb,eAACH,GAAA,EAAD,CAAKnD,UAAU,aAAaoD,GAAI,EAAhC,UACC,4CACA,gCACC,8BACgB,mBAAGG,KAAMP,EAAUhD,UAAU,cACnCM,OAAO,SADD,sBAGhB,8BACgB,mBAAGiD,KAnCb,oBAmC8BvD,UAAU,cAC9BM,OAAO,SADP,kCAQpB,cAAC0B,GAAA,EAAD,CAAWhC,UAAU,kBAAkBiD,OAAK,EAA5C,SACA,cAACjB,GAAA,EAAD,UACI,cAACkB,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKnD,UAAU,mBAAf,qBACS,mBAAGuD,KAAMP,EAAUhD,UAAU,cACrCM,OAAO,SADC,mC,UCHdkD,OAxEf,YAAyC,IAAvBjD,EAAsB,EAAtBA,MAAOkD,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC3B,OACI,sBAAK1D,UAAU,SAAf,UACI,gCACA,+BACI,mBAAG2D,MAAO,CAAED,SAAS1D,UACjBO,GAAS,EACH,cACAA,GAAS,GACL,uBACA,kBAMlB,+BACI,mBAAGoD,MAAO,CAAED,SAAS1D,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,+BACI,mBAAGoD,MAAO,CAAED,SAAS1D,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,+BACI,mBAAGoD,MAAO,CAAED,SAAS1D,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,+BACI,mBAAGoD,MAAO,CAAED,SAAS1D,UACjBO,GAAS,EACH,cACAA,GAAS,IACL,uBACA,qBAOlB,8BACI,+BAAOkD,GAAQA,U,OChChBG,OA7Bf,YAA+B,IAAZ3H,EAAW,EAAXA,QACf,OACI,eAAC4H,GAAA,EAAD,CAAM7D,UAAU,4BAAhB,UACI,cAAC,QAAD,CAAMiC,GAAE,mBAAchG,EAAQ6H,KAA9B,SACI,cAACD,GAAA,EAAKE,IAAN,CAAU/D,UAAU,mBAAmBgE,IAAK/H,EAAQgI,UAGxD,eAACJ,GAAA,EAAKK,KAAN,WACI,cAAC,QAAD,CAAMjC,GAAE,mBAAchG,EAAQ6H,KAA9B,SACI,cAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACI,iCAASnI,EAAQkE,WAIzB,cAAC0D,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACI,qBAAKpE,UAAU,OAAf,SACI,cAAC,GAAD,CAAQO,MAAOtE,EAAQqI,OAAQb,KAAI,UAAKxH,EAAQsI,WAAb,YAAmCb,MAAO,gBAKrF,eAACG,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,cACMnI,EAAQuI,gB,UCTfC,OAjBf,WACI,OACI,cAACC,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLjB,MAAO,CACHkB,OAAQ,QACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,SAPjB,SAUI,sBAAMhF,UAAU,UAAhB,2B,UCJGiF,OARf,YAAyC,IAAtBxE,EAAqB,EAArBA,QAASyE,EAAY,EAAZA,SACxB,OACI,cAACC,GAAA,EAAD,CAAO1E,QAASA,EAAhB,SACKyE,K,iBCuBEE,OAvBf,YAAmE,IAA/CtJ,EAA8C,EAA9CA,MAAOD,EAAuC,EAAvCA,KAAuC,IAAjCwD,eAAiC,MAAvB,GAAuB,MAAnBwD,eAAmB,SAK9D,OAJIxD,IACAA,EAAUA,EAAQgG,MAAM,aAAa,GAAGA,MAAM,KAAK,IAG/CvJ,EAAQ,GACZ,cAACwJ,GAAA,EAAD,CAAYtF,UAAU,cAAtB,SACK,YAAIuF,MAAMzJ,GAAO0J,QAAQxI,KAAI,SAACD,GAAD,OAC1B,cAAC,iBAAD,CAEIkF,GAAKY,EAAD,sCAEiCxD,EAFjC,iBAEiDtC,EAAI,GAFrD,oBACasC,EADb,iBAC6BtC,EAAI,GAHzC,SAOI,cAACuI,GAAA,EAAW5C,KAAZ,CAAiB+C,OAAQ1I,EAAI,IAAMlB,EAAnC,SAA0CkB,EAAI,KANzCA,EAAI,S,oBCmBhB2I,GAAe,eAACrG,EAAD,uDAAW,GAAX,gDAAkB,WAAOuB,GAAP,kBAAAE,EAAA,sEAEtCF,EAAS,CAAElF,KAAMnF,IAFqB,SAIf4K,KAAMC,IAAN,uBAA0B/B,IAJX,gBAI9BgC,EAJ8B,EAI9BA,KAERT,EAAS,CACLlF,KAAMlF,EACNoF,QAASyF,IARyB,gDAYtCT,EAAS,CACLlF,KAAMjF,EACNmF,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBsB,yDAAlB,uDA2CfmE,GAAqB,SAAChF,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAElCF,EAAS,CAAElF,KAAMhF,IAFiB,SAIXyK,KAAMC,IAAN,wBAA2BT,IAJhB,gBAI1BU,EAJ0B,EAI1BA,KAERT,EAAS,CACLlF,KAAM/E,EACNiF,QAASyF,IARqB,gDAYlCT,EAAS,CACLlF,KAAM9E,EACNgF,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBkB,yDAAR,uD,OCjCnBoE,OAlCf,WACI,IAAMhF,EAAWe,cAEXnF,EAAkBkF,aAAY,SAAAnG,GAAK,OAAIA,EAAMiB,mBAC3CT,EAA6BS,EAA7BT,MAAOJ,EAAsBa,EAAtBb,QAASH,EAAagB,EAAbhB,SAMxB,OAJAqK,qBAAU,WACNjF,EDsCuB,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAE7BF,EAAS,CAAElF,KAAM9D,IAFY,SAINuJ,KAAMC,IAAN,sBAJM,gBAIrBC,EAJqB,EAIrBA,KAERT,EAAS,CACLlF,KAAM7D,EACN+D,QAASyF,IARgB,gDAY7BT,EAAS,CACLlF,KAAM5D,EACN8D,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBa,yDAAN,yDCrCxB,CAACZ,IAEIjF,EAAU,cAAC,GAAD,IACZI,EACI,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE7B,qBAAKiE,UAAU,0BAAf,SACI,cAAC8F,GAAA,EAAD,CAAUC,MAAM,QAAQC,SAAS,WAAjC,SACKxK,EAASwB,KAAI,SAAAf,GAAO,OACjB,cAAC6J,GAAA,EAASpD,KAAV,UACI,cAAC,QAAD,CAAMT,GAAE,mBAAchG,EAAQ6H,KAA9B,SACI,cAACmC,GAAA,EAAD,CAAOjG,UAAU,eACjBgE,IAAK/H,EAAQiK,OAAQC,IAAKlK,EAAQkE,KAAM8C,OAAK,OAHjChH,EAAQ6H,aCmBrCsC,OAnCf,YAAkC,IAAZ7G,EAAW,EAAXA,QACZqB,EAAWe,cACXrG,EAAcoG,aAAY,SAAAnG,GAAK,OAAIA,EAAMD,eACvCS,EAA0CT,EAA1CS,MAAOJ,EAAmCL,EAAnCK,QAASH,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,KAAMC,EAAUR,EAAVQ,MAEpCuD,EAAUE,EAAQO,SAASuG,OAO/B,OALAR,qBAAU,WACNjF,EAAS8E,GAAarG,MAEvB,CAACuB,EAAUvB,IAGV,iCACMA,GAAW,cAAC,GAAD,IAEb,iDACC1D,EAAU,cAAC,GAAD,IACLI,EAAQ,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAEjC,gCACI,cAACmH,GAAA,EAAD,UACK1H,EAASwB,KAAI,SAAAf,GAAO,OACjB,cAACkH,GAAA,EAAD,CAAuBmD,GAAI,GAAIlD,GAAI,EAAGmD,GAAI,EAAGC,GAAI,EAAjD,SACI,cAAC,GAAD,CAASvK,QAASA,KADZA,EAAQ6H,UAK1B,cAAC,GAAD,CAAUjI,KAAMA,EAAMC,MAAOA,EAAOuD,QAASA,W,iBCqMtDoH,OA/Nf,YAA4C,IAAnBC,EAAkB,EAAlBA,MAAOnH,EAAW,EAAXA,QAAW,EACjBH,mBAAS,GADQ,oBAChCuH,EADgC,KAC3BC,EAD2B,OAEXxH,mBAAS,GAFE,oBAEhCkF,EAFgC,KAExBuC,EAFwB,OAGTzH,mBAAS,IAHA,oBAGhC0H,EAHgC,KAGvBC,EAHuB,KAKjCnG,EAAWe,cAEX3F,EAAiB0F,aAAY,SAAAnG,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhBmB,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAEFb,EAAsBmF,aAAY,SAAAnG,GAAK,OAAIA,EAAMgB,uBAE1CyK,EAGTzK,EAHAZ,QACOsL,EAEP1K,EAFAR,MACSmL,EACT3K,EADAH,QA4BJ,OAzBAyJ,qBAAU,WACFqB,IACAL,EAAU,GACVE,EAAW,IACXnG,EAAS,CAAElF,KAAM/D,KAGrBiJ,EAAS+E,GAAmBe,EAAMS,OAAOxG,OAE1C,CAACC,EAAU8F,EAAOQ,IAiBjB,gCACI,eAAC,QAAD,CAAMjF,GAAG,IAAIjC,UAAU,qBAAvB,UAA4C,cAAC,KAAD,IAA5C,WACCrE,EACG,cAAC,GAAD,IACEI,EACI,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAEzB,gCACI,eAACmH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAGpD,UAAU,OAAtB,SACI,cAACiG,GAAA,EAAD,CAAOjG,UAAU,qBAAqBgE,IAAK/H,EAAQgI,MAAOkC,IAAKlK,EAAQkE,KAAM8C,OAAK,MAGtF,cAACE,GAAA,EAAD,CAAKC,GAAI,EAAGpD,UAAU,OAAtB,SACA,eAACkD,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,GAAT,SACI,eAACgE,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,UACI,cAAC2G,GAAA,EAAU1E,KAAX,UACI,6BAAKzG,EAAQkE,SAGjB,cAACiH,GAAA,EAAU1E,KAAX,UACI,cAAC,GAAD,CAAQnC,MAAOtE,EAAQqI,OAAQb,KAAI,UAAKxH,EAAQsI,WAAb,YAAmCb,MAAO,cAGjF,eAAC0D,GAAA,EAAU1E,KAAX,sBACazG,EAAQuI,SAGrB,eAAC4C,GAAA,EAAU1E,KAAX,2BACkBzG,EAAQoL,oBAMlC,cAAClE,GAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAACS,GAAA,EAAD,UACI,eAACuD,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,UACI,cAAC2G,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,qBACA,cAACA,GAAA,EAAD,UACI,uCAAUlH,EAAQuI,gBAI9B,cAAC4C,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,UACKlH,EAAQqL,aAAe,EAAI,WAAa,sBAKpDrL,EAAQqL,aAAe,GACpB,cAACF,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,kBACA,cAACA,GAAA,EAAD,CAAKoE,GAAG,OAAOvH,UAAU,OAAzB,SACI,cAACP,GAAA,EAAKS,QAAN,CACIkE,GAAG,SACH7D,MAAOoG,EACPtG,SAAU,SAACV,GAAD,OAAOiH,EAAOjH,EAAEW,OAAOC,QAHrC,SAOQ,YAAIgF,MAAMtJ,EAAQqL,cAAc9B,QAAQxI,KAAI,SAACD,GAAD,OACxC,wBAAoBwD,MAAOxD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAa7C,cAACqK,GAAA,EAAU1E,KAAX,UACI,cAAClC,GAAA,EAAD,CACImC,QAnG3B,WACrBpD,EAAQM,KAAR,gBAAsB6G,EAAMS,OAAOxG,GAAnC,gBAA6CgG,KAmGG3G,UAAU,YACVwH,SAAkC,GAAxBvL,EAAQqL,aAClB5L,KAAK,SAJT,0CAiBxB,cAACwH,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKC,GAAI,GAAIpD,UAAU,OAAvB,UACI,yCAC4B,IAA3B/D,EAAQC,QAAQuL,QAAgB,cAAC,GAAD,CAAShH,QAAQ,OAAjB,wBAEjC,eAAC2G,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,UACKxE,EAAQC,QAAQc,KAAI,SAAC0K,GAAD,OACjB,eAACN,GAAA,EAAU1E,KAAX,WACI,iCAASgF,EAAOvH,OAChB,cAAC,GAAD,CAAQI,MAAOmH,EAAOpD,OAAQZ,MAAM,YACpC,4BAAIgE,EAAOC,UAAUC,UAAU,EAAG,MAClC,4BAAIF,EAAOZ,YAJMY,EAAO5D,QAQhC,eAACsD,GAAA,EAAU1E,KAAX,WACI,gDAECsE,GAAwB,cAAC,GAAD,IACxBE,GAAwB,cAAC,GAAD,CAASzG,QAAQ,UAAjB,8BACxBwG,GAAsB,cAAC,GAAD,CAASxG,QAAQ,SAAjB,SAA2BwG,IAEjD7J,EACG,eAACqC,GAAA,EAAD,CAAMC,SAtI5B,SAACC,GH+KQ,IAACkI,EAAWH,EG9KvC/H,EAAEC,iBACFgB,GH6K4BiH,EG5KxBnB,EAAMS,OAAOxG,GH4KsB+G,EG5KlB,CACjBpD,SACAwC,WH0KuB,yCAAuB,WAAOlG,EAAUC,GAAjB,wBAAAC,EAAA,sEAElDF,EAAS,CACLlF,KAAMlE,IAHwC,EAQ9CqJ,IADazD,EAPiC,EAO9CD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbQ,SAiB3BC,KAAM2G,KAAN,wBACFD,EADE,aAEnBH,EACA3G,GApB8C,gBAiB1CM,EAjB0C,EAiB1CA,KAKRT,EAAS,CACLlF,KAAMjE,EACNmE,QAASyF,IAxBqC,kDA8BlDT,EAAS,CACLlF,KAAMhE,EACNkE,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCkC,0DAAvB,2DGzCa,UACI,eAAC/B,GAAA,EAAKsI,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,qBACA,eAACxI,GAAA,EAAKS,QAAN,CACIkE,GAAG,SACH7D,MAAO+D,EACPjE,SAAU,SAACV,GAAD,OAAOkH,EAAUlH,EAAEW,OAAOC,QAHxC,UAKI,wBAAQA,MAAM,GAAd,uBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,iCAIR,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,qBACA,cAACxI,GAAA,EAAKS,QAAN,CACIkE,GAAG,WACH8D,IAAI,IACJ3H,MAAOuG,EACPzG,SAAU,SAACV,GAAD,OAAOoH,EAAWpH,EAAEW,OAAOC,aAI7C,cAACC,GAAA,EAAD,CACIgH,SAAUR,EACVtL,KAAK,SACL+E,QAAQ,UAHZ,uBAUA,eAAC,GAAD,CAASA,QAAQ,OAAjB,oBAA+B,cAAC,QAAD,CAAMwB,GAAG,SAAT,mBAA/B,0CCjNvCkG,GAAY,SAACxH,EAAIgG,GAAL,gDAAa,WAAO/F,EAAUC,GAAjB,kBAAAC,EAAA,sEACXK,KAAMC,IAAN,wBAA2BT,IADhB,gBAC1BU,EAD0B,EAC1BA,KAERT,EAAS,CACLlF,KAAM3D,EACN6D,QAAS,CACLK,QAASoF,EAAKyC,IACd3D,KAAMkB,EAAKlB,KACX8D,MAAO5C,EAAK4C,MACZO,MAAOnD,EAAKmD,MACZ8C,aAAcjG,EAAKiG,aACnBX,SAGRpI,aAAa6J,QAAQ,YAAa3J,KAAK4J,UAAUxH,IAAWpE,KAAKC,YAd/B,2CAAb,yD,OC8GV4L,OA/Gf,YAAmD,IAA7B5B,EAA4B,EAA5BA,MAAO5G,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7BsI,EAAYnB,EAAMS,OAAOxG,GACzBgG,EAAM7G,EAASuG,OAASkC,OAAOzI,EAASuG,OAAOhB,MAAM,KAAK,IAAM,EAChEzE,EAAWe,cAGTjF,EADKgF,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAChCC,UAERmJ,qBAAU,WACFgC,GACAjH,EAASuH,GAAUN,EAAWlB,MAEnC,CAAC/F,EAAUiH,EAAWlB,IAGzB,IAAM6B,EAAwB,SAAC7H,GAC3BC,EDIsB,SAACD,GAAD,OAAQ,SAACC,EAAUC,GAC7CD,EAAS,CACLlF,KAAM1D,EACN4D,QAAS+E,IAGbpC,aAAa6J,QAAQ,YAAa3J,KAAK4J,UAAUxH,IAAWpE,KAAKC,aCVpD+L,CAAe9H,KAO5B,OACI,eAACuC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,UACI,+CACsB,IAArB1G,EAAU+K,OACP,eAAC,GAAD,CAAShH,QAAQ,OAAjB,gCACuB,cAAC,QAAD,CAAMwB,GAAG,IAAT,wBAGnB,cAACmF,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,SACK/D,EAAUM,KAAI,SAAAJ,GAAI,OACf,cAACwK,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC6C,GAAA,EAAD,CAAOjC,IAAKpH,EAAKqH,MAAOkC,IAAKvJ,EAAKuD,KAAM8C,OAAK,EAACyF,SAAO,MAEzD,cAACvF,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,QAAD,CAAMnB,GAAE,mBAAcrF,EAAKX,SAA3B,SAAuCW,EAAKuD,SAGhD,eAACgD,GAAA,EAAD,CAAKC,GAAI,EAAGpD,UAAU,YAAtB,cACMpD,EAAK4H,SAGX,cAACrB,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC3D,GAAA,EAAKS,QAAN,CACIkE,GAAG,SACH7D,MAAO3D,EAAK+J,IACZtG,SAAU,SAACV,GAAD,OAAOiB,EAASuH,GAAUvL,EAAKX,QAASsM,OAAO5I,EAAEW,OAAOC,UAHtE,SAOQ,YAAIgF,MAAM3I,EAAK0K,cAAc9B,QAAQxI,KAAI,SAACD,GAAD,OACrC,wBAAoBwD,MAAOxD,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UASjC,cAACoG,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC5C,GAAA,EAAD,CACI9E,KAAK,SACL+E,QAAQ,QACRkC,QAAS,kBAAM6F,EAAsB5L,EAAKX,UAH9C,SAKI,mBAAG+D,UAAU,yBArCRpD,EAAKX,iBA+C9C,cAACkH,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACS,GAAA,EAAD,WACI,cAACuD,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,SACI,eAAC2G,GAAA,EAAU1E,KAAX,WACI,4CAAehG,EAAUiM,QAAO,SAACC,EAAKhM,GAAN,OAAegM,EAAMhM,EAAK+J,MAAK,GAA/D,aACA,uBAAM3G,UAAU,YAAhB,cACMtD,EAAUiM,QAAO,SAACC,EAAKhM,GAAN,OAAegM,EAAMhM,EAAK+J,IAAM/J,EAAK4H,QAAO,GAAGqE,QAAQ,WAKtF,cAACzB,GAAA,EAAU1E,KAAX,UACI,cAAClC,GAAA,EAAD,CACI9E,KAAK,SACL+E,QAAQ,SACRT,UAAU,4BACVwH,SAA+B,IAArB9K,EAAU+K,OACpB9E,QA/EA,WACpBpD,EAAQM,KAAK,6BAyEG,4CCvFTiJ,OAZf,YAAsC,IAAb5D,EAAY,EAAZA,SACrB,OACI,cAAClD,GAAA,EAAD,UACI,cAACkB,GAAA,EAAD,CAAKlD,UAAU,4BAAf,SACI,cAACmD,GAAA,EAAD,CAAKoE,GAAI,GAAInE,GAAI,EAAjB,SACK8B,S,OC2EN6D,OAxEf,YAA6C,IAAtBjJ,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAAW,EACdH,mBAAS,IADK,oBACjC4J,EADiC,KAC1BC,EAD0B,OAER7J,mBAAS,IAFD,oBAEjC8J,EAFiC,KAEvBC,EAFuB,KAIlCvI,EAAWe,cAEXyH,EAAWtJ,EAASuG,OAASvG,EAASuG,OAAOhB,MAAM,KAAK,GAAK,IAE7DlI,EAAYuE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCpB,EAA6BoB,EAA7BpB,MAAOJ,EAAsBwB,EAAtBxB,QAASyB,EAAaD,EAAbC,SAaxB,OAXAyI,qBAAU,WACFzI,GACAmC,EAAQM,KAAKuJ,KAElB,CAAC7J,EAASnC,EAAUgM,IAQnB,cAAC,GAAD,UACA,sBAAKpJ,UAAU,sBAAf,UACI,yCACCjE,GAAS,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC8D,GAAA,EAAD,CAAMC,SAXQ,SAACC,GACnBA,EAAEC,iBACFgB,EfSa,SAACoI,EAAOE,GAAR,gDAAqB,WAAOtI,GAAP,oBAAAE,EAAA,sEAElCF,EAAS,CACLlF,KAAMtD,IAGJ2I,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAM2G,KACzB,oBACA,CAAE,SAAYkB,EAAO,SAAYE,GACjCnI,GAf8B,gBAY1BM,EAZ0B,EAY1BA,KAMRT,EAAS,CACLlF,KAAMrD,EACNuD,QAASyF,IAGb9C,aAAa6J,QAAQ,WAAY3J,KAAK4J,UAAUhH,IAvBd,kDA0BlCT,EAAS,CACLlF,KAAMpD,EACNsD,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA9BkB,0DAArB,sDeTJ6H,CAAML,EAAOE,KASlB,UAEI,eAACzJ,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,4BACA,cAACxI,GAAA,EAAKS,QAAN,CACIxE,KAAK,QACL0E,YAAY,cACZG,MAAOyI,EACP3I,SAAU,SAACV,GAAD,OAAOsJ,EAAStJ,EAAEW,OAAOC,aAM3C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,uBACA,cAACxI,GAAA,EAAKS,QAAN,CACIxE,KAAK,WACL0E,YAAY,iBACZG,MAAO2I,EACP7I,SAAU,SAACV,GAAD,OAAOwJ,EAAYxJ,EAAEW,OAAOC,aAK9C,cAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,wBAKJ,cAACyC,GAAA,EAAD,CAAKlD,UAAU,OAAf,SACI,eAACmD,GAAA,EAAD,4BACkB,cAAC,QAAD,CACVlB,GAAImH,EAAQ,6BAAyBA,GAAa,YADxC,iC,OCgDnBE,OA5Gf,YAAgD,IAAtBxJ,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAAW,EAEnBH,mBAAS,IAFU,oBAEpCe,EAFoC,KAE9BoJ,EAF8B,OAGjBnK,mBAAS,IAHQ,oBAGpC4J,EAHoC,KAG7BC,EAH6B,OAIX7J,mBAAS,IAJE,oBAIpC8J,EAJoC,KAI1BC,EAJ0B,OAKG/J,mBAAS,IALZ,oBAKpCoK,EALoC,KAKnBC,EALmB,OAMbrK,mBAAS,IANI,oBAMpCoC,EANoC,KAM3BkI,EAN2B,KAQrC9I,EAAWe,cAEXyH,EAAWtJ,EAASuG,OAASvG,EAASuG,OAAOhB,MAAM,KAAK,GAAK,IAE7DhI,EAAeqE,aAAY,SAAAnG,GAAK,OAAIA,EAAM8B,gBACxCtB,EAA6BsB,EAA7BtB,MAAOJ,EAAsB0B,EAAtB1B,QAASyB,EAAaC,EAAbD,SAmBxB,OAjBAyI,qBAAU,WACFzI,GACAmC,EAAQM,KAAKuJ,KAElB,CAAC7J,EAASnC,EAAUgM,IAcnB,cAAC,GAAD,UACA,sBAAKpJ,UAAU,yBAAf,UACI,yCACCwB,GAAW,cAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtCzF,GAAS,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC8D,GAAA,EAAD,CAAMC,SAlBQ,SAACC,GACnBA,EAAEC,iBAEEsJ,GAAYM,EACZE,EAAW,0BAEX9I,EhB8CY,SAACT,EAAM6I,EAAOE,GAAd,gDAA2B,WAAOtI,GAAP,oBAAAE,EAAA,sEAE3CF,EAAS,CACLlF,KAAMlD,IAGJuI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAM2G,KACzB,uBACA,CAAE,KAAQ3H,EAAM,MAAS6I,EAAO,SAAYE,GAC5CnI,GAfuC,gBAYnCM,EAZmC,EAYnCA,KAMRT,EAAS,CACLlF,KAAMjD,EACNmD,QAASyF,IAGbT,EAAS,CACLlF,KAAMrD,EACNuD,QAASyF,IAGb9C,aAAa6J,QAAQ,WAAY3J,KAAK4J,UAAUhH,IA5BL,kDA+B3CT,EAAS,CACLlF,KAAMhD,EACNkD,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAnC2B,0DAA3B,sDgB9CHmI,CAASxJ,EAAM6I,EAAOE,KAY/B,UAEI,eAACzJ,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,mBACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GAAD,OAAO4J,EAAQ5J,EAAEW,OAAOC,aAK1C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,4BACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,QACL0E,YAAY,cACZG,MAAOyI,EACP3I,SAAU,SAACV,GAAD,OAAOsJ,EAAStJ,EAAEW,OAAOC,aAK3C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,uBACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,WACL0E,YAAY,iBACZG,MAAO2I,EACP7I,SAAU,SAACV,GAAD,OAAOwJ,EAAYxJ,EAAEW,OAAOC,aAK9C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,+BACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,WACL0E,YAAY,mBACZG,MAAOiJ,EACPnJ,SAAU,SAACV,GAAD,OAAO8J,EAAmB9J,EAAEW,OAAOC,aAKrD,cAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,yBAMJ,cAACyC,GAAA,EAAD,CAAKlD,UAAU,OAAf,SACI,eAACmD,GAAA,EAAD,+BACqB,cAAC,QAAD,CACblB,GAAImH,EAAQ,0BAAsBA,GAAa,SADlC,gC,iBCuEtBS,OAtKf,YAAqC,IAAZtK,EAAW,EAAXA,QAAW,EAERH,mBAAS,IAFD,oBAEzBe,EAFyB,KAEnBoJ,EAFmB,OAGNnK,mBAAS,IAHH,oBAGzB4J,EAHyB,KAGlBC,EAHkB,OAIA7J,mBAAS,IAJT,oBAIzB8J,EAJyB,KAIfC,EAJe,OAKc/J,mBAAS,IALvB,oBAKzBoK,EALyB,KAKRC,EALQ,OAMFrK,mBAAS,IANP,oBAMzBoC,EANyB,KAMhBkI,EANgB,KAQ1B9I,EAAWe,cAEXrE,EAAcoE,aAAY,SAAAnG,GAAK,OAAIA,EAAM+B,eACvCvB,EAAyBuB,EAAzBvB,MAAOJ,EAAkB2B,EAAlB3B,QAAS4B,EAASD,EAATC,KAGhBH,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAGAhB,EADkBsF,aAAY,SAAAnG,GAAK,OAAIA,EAAMiC,qBAC7CpB,QAEF8B,EAAcwD,aAAY,SAAAnG,GAAK,OAAIA,EAAM2C,eAC9B4L,EAA8C5L,EAAvDvC,QAA+BoO,EAAwB7L,EAA/BnC,MAAoBoC,EAAWD,EAAXC,OAkCpD,OA/BA0H,qBAAU,WACDzI,EAGIG,GAASA,EAAK4C,OAAQ/D,GAAWgB,EAAS0G,MAAQvG,EAAKuG,KAKxDyF,EAAQhM,EAAK4C,MACb8I,EAAS1L,EAAKyL,SALdpI,EAAS,CAAElF,KAAMxC,KACjB0H,EAASF,GAAe,YACxBE,EC8JY,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLlF,KAAMjB,KAHgB,EAQtBoG,IADazD,EAPS,EAOtBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbhB,SAiBHC,KAAMC,IAAN,wBAEnBL,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACLlF,KAAMhB,GACNkB,QAASyF,IAxBa,kDA6B1BT,EAAS,CACLlF,KAAMf,GACNiB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCU,0DAAN,0DDnKhBjC,EAAQM,KAAK,YAWlB,CAACe,EAAUrB,EAASnC,EAAUG,EAAMnB,IAmBnC,eAAC8G,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACA,sBAAKpD,UAAU,4BAAf,UACI,8CAECwB,GAAW,cAAC,GAAD,CAASf,QAAQ,SAAjB,SAA2Be,IACtCzF,GAAS,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC8D,GAAA,EAAD,CAAMC,SAzBI,SAACC,GACnBA,EAAEC,iBAEEsJ,GAAYM,EACZE,EAAW,2BAEX9I,EjB2GqB,SAACrD,GAAD,gDAAU,WAAOqD,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACLlF,KAAM3C,IAHyB,EAQ/B8H,IADazD,EAPkB,EAO/BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbP,SAiBZC,KAAM6I,IAAN,6BAEnBzM,EACAwD,GApB+B,gBAiB3BM,EAjB2B,EAiB3BA,KAMRT,EAAS,CACLlF,KAAM1C,GACN4C,QAASyF,IAGbT,EAAS,CACLlF,KAAMrD,EACNuD,QAASyF,IAGb9C,aAAa6J,QAAQ,WAAY3J,KAAK4J,UAAUhH,IAjCb,kDAoCnCT,EAAS,CACLlF,KAAMzC,GACN2C,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAxCmB,0DAAV,wDiB3GZyI,CAAkB,CACvB,GAAM1M,EAAKuG,IACX,KAAQ3D,EACR,MAAS6I,EACT,SAAYE,KAEhBQ,EAAW,MAaP,UAEI,eAACjK,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,mBACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GAAD,OAAO4J,EAAQ5J,EAAEW,OAAOC,aAK1C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,4BACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,QACL0E,YAAY,cACZG,MAAOyI,EACP3I,SAAU,SAACV,GAAD,OAAOsJ,EAAStJ,EAAEW,OAAOC,aAK3C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,uBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,WACL0E,YAAY,iBACZG,MAAO2I,EACP7I,SAAU,SAACV,GAAD,OAAOwJ,EAAYxJ,EAAEW,OAAOC,aAK9C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,+BACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,WACL0E,YAAY,mBACZG,MAAOiJ,EACPnJ,SAAU,SAACV,GAAD,OAAO8J,EAAmB9J,EAAEW,OAAOC,aAKrD,cAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,4BAQR,cAAC0C,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,sBAAKpD,UAAU,iCAAf,UACA,2CACC8J,EACG,cAAC,GAAD,IACAC,EACA,cAAC,GAAD,CAAStJ,QAAQ,SAAjB,SAA2BsJ,IAEnB,eAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACpK,UAAU,WAApC,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,sCACA,2CACA,4BAIR,gCACK7B,EAAOnB,KAAI,SAAAc,GAAK,OACb,+BACI,6BAAKA,EAAMgG,MACX,6BAAKhG,EAAM6J,UAAUC,UAAU,EAAG,MAClC,mCAAM9J,EAAMuM,cACZ,6BAAKvM,EAAMwM,OAASxM,EAAMyM,OAAO3C,UAAU,EAAG,IAC1C,mBAAG5H,UAAU,eAAe2D,MAAO,CAAED,MAAO,WAEhD,6BACI,cAAC,iBAAD,CAAezB,GAAE,iBAAYnE,EAAMgG,KAAnC,SACI,cAACtD,GAAA,EAAD,CAAQR,UAAU,SAAlB,2BATHlC,EAAMgG,sB,OEvGxC0G,OA/Cf,YAAwD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAE1C,OACI,eAACtI,GAAA,EAAD,CAAKtC,UAAU,6CAAf,UACI,cAACsC,GAAA,EAAII,KAAL,UACK+H,EACG,cAAC,iBAAD,CAAexI,GAAG,SAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,sBAGA,cAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,qBAIZ,cAAClF,GAAA,EAAII,KAAL,UACKgI,EACG,cAAC,iBAAD,CAAezI,GAAG,YAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,yBAGA,cAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,wBAIZ,cAAClF,GAAA,EAAII,KAAL,UACKiI,EACG,cAAC,iBAAD,CAAe1I,GAAG,WAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,wBAGA,cAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,uBAIZ,cAAClF,GAAA,EAAII,KAAL,UACKkI,EACG,cAAC,iBAAD,CAAe3I,GAAG,cAAlB,SACI,cAACK,GAAA,EAAIC,KAAL,4BAGA,cAACD,GAAA,EAAIC,KAAL,CAAUiF,UAAQ,EAAlB,+B,OCgDTqD,OArFf,YAAsC,IAAZtL,EAAW,EAAXA,QAGd5C,EADK+E,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAChCE,gBAEFiE,EAAWe,cALgB,EAOHvC,mBAASzC,EAAgBmO,SAPtB,oBAO1BA,EAP0B,KAOjBC,EAPiB,OAQT3L,mBAASzC,EAAgBqO,MARhB,oBAQ1BA,EAR0B,KAQpBC,EARoB,OASG7L,mBAASzC,EAAgBuO,YAT5B,oBAS1BA,EAT0B,KASdC,EATc,OAUH/L,mBAASzC,EAAgByO,SAVtB,oBAU1BA,EAV0B,KAUjBC,EAViB,KAkBjC,OACI,cAAC,GAAD,UACA,gCACI,cAAC,GAAD,CAAeZ,OAAK,EAACC,OAAK,IAC1B,sBAAK1K,UAAU,wBAAf,UACA,0CACA,eAACP,GAAA,EAAD,CAAMC,SAZQ,SAACC,GRkBQ,IAAC0B,EQjB5B1B,EAAEC,iBACFgB,GRgB4BS,EQhBC,CAAEyJ,UAASE,OAAME,aAAYE,WRgBrB,SAACxK,GAC1CA,EAAS,CACLlF,KAAMzD,EACN2D,QAASyF,IAGb9C,aAAa6J,QAAQ,kBAAmB3J,KAAK4J,UAAUhH,OQrBnD9B,EAAQM,KAAK,aAST,UAEI,eAACJ,GAAA,EAAKsI,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,sBACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,OACL0E,YAAY,gBACZG,MAAOuK,GAAoB,GAC3BzK,SAAU,SAACV,GAAD,OAAOoL,EAAWpL,EAAEW,OAAOC,aAK7C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,mBACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,OACL0E,YAAY,aACZG,MAAOyK,GAAc,GACrB3K,SAAU,SAACV,GAAD,OAAOsL,EAAQtL,EAAEW,OAAOC,aAK1C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,0BACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,OACL0E,YAAY,oBACZG,MAAO2K,GAA0B,GACjC7K,SAAU,SAACV,GAAD,OAAOwL,EAAcxL,EAAEW,OAAOC,aAKhD,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,sBACA,cAACxI,GAAA,EAAKS,QAAN,CACI0J,UAAQ,EACRlO,KAAK,OACL0E,YAAY,gBACZG,MAAO6K,GAAoB,GAC3B/K,SAAU,SAACV,GAAD,OAAO0L,EAAW1L,EAAEW,OAAOC,aAK7C,cAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,kC,OCxBD6K,OAlDf,YAAqC,IAAZ/L,EAAW,EAAXA,QAGb5C,EADK+E,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAChCE,gBAEFiE,EAAWe,cALe,EAOUvC,mBAAS,UAPnB,oBAOzBlC,EAPyB,KAOVqO,EAPU,KAmBhC,OAVK5O,EAAgBmO,SACjBvL,EAAQM,KAAK,aAUb,cAAC,GAAD,UACA,gCACI,cAAC,GAAD,CAAe4K,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,eAAClL,GAAA,EAAD,CAAMO,UAAU,uBAAuBN,SAXzB,SAACC,GT0BM,IAAC0B,ESzB1B1B,EAAEC,iBACFgB,GTwB0BS,ESxBCnE,ETwBQ,SAAC0D,GACxCA,EAAS,CACLlF,KAAMxD,EACN0D,QAASyF,IAGb9C,aAAa6J,QAAQ,gBAAiB3J,KAAK4J,UAAUhH,OS7BjD9B,EAAQM,KAAK,gBAQT,UACI,eAACJ,GAAA,EAAKsI,MAAN,WACI,cAACtI,GAAA,EAAKwI,MAAN,CAAY7D,GAAG,SAAf,2BACA,cAACjB,GAAA,EAAD,UACI,cAAC1D,GAAA,EAAK+L,MAAN,CACI9P,KAAK,QACL+P,MAAM,wBACN9K,GAAG,SACHR,KAAK,gBACLuL,SAAO,EACPrL,SAAU,SAACV,GAAD,OAAO4L,EAAiB5L,EAAEW,OAAOC,eAOvD,cAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,+B,OC4HDkL,OAnKf,YAAwC,IAAZpM,EAAW,EAAXA,QAElB1B,EAAc6D,aAAY,SAAAnG,GAAK,OAAIA,EAAMsC,eACvCC,EAA0BD,EAA1BC,MAAO/B,EAAmB8B,EAAnB9B,MAAOK,EAAYyB,EAAZzB,QAEhBwE,EAAWe,cAEXlF,EAAOiF,aAAY,SAAAnG,GAAK,OAAIA,EAAMkB,QAgCxC,OA9BAA,EAAKmP,WAAanP,EAAKC,UAAUiM,QAAO,SAACC,EAAKhM,GAAN,OAAegM,EAAMhM,EAAK4H,MAAQ5H,EAAK+J,MAAK,GAAGkC,QAAQ,GAC/FpM,EAAKoP,eAAiBpP,EAAKmP,WAAa,IAAM,EAAI,IAAI/C,QAAQ,GAC9DpM,EAAKqP,SAAWvD,OAAQ,KAAS9L,EAAKmP,YAAY/C,QAAQ,GAE1DpM,EAAK4N,YAAc9B,OAAO9L,EAAKmP,YAAcrD,OAAO9L,EAAKoP,eAAiBtD,OAAO9L,EAAKqP,WAAWjD,QAAQ,GAGpGpM,EAAKS,eACNqC,EAAQM,KAAK,YAGjBgG,qBAAU,WACFzJ,IACAmD,EAAQM,KAAR,iBAAuB/B,EAAMgG,MAC7BlD,EAAS,CAAElF,KAAMzB,QAEtB,CAACmC,EAASmD,IAeT,8BACA,eAACyC,GAAA,EAAD,WACI,cAACkB,GAAA,EAAD,CAAKlD,UAAU,4BAAf,SACI,cAACmD,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC,GAAD,CAAeqH,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,QAG9C,eAAC1H,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACgE,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,UACI,eAAC2G,GAAA,EAAU1E,KAAX,WACI,0CAEA,8BACI,gDACCjG,EAAKE,gBAAgBmO,QAF1B,MAEsCrO,EAAKE,gBAAgBqO,KACtD,KACAvO,EAAKE,gBAAgBuO,WAJ1B,IAKK,KACAzO,EAAKE,gBAAgByO,cAI9B,eAAChE,GAAA,EAAU1E,KAAX,WACI,gDACA,8BACI,8CACCjG,EAAKS,oBAId,eAACkK,GAAA,EAAU1E,KAAX,WACI,6CAC2B,IAA1BjG,EAAKC,UAAU+K,OAAe,cAAC,GAAD,CAAShH,QAAQ,OAAjB,gCAGvB,cAAC2G,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,SACKhE,EAAKC,UAAUM,KAAI,SAACJ,EAAMmP,GAAP,OAChB,cAAC3E,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC6C,GAAA,EAAD,CAAOjC,IAAKpH,EAAKqH,MAAOkC,IAAKvJ,EAAKuD,KAAM8C,OAAK,EAACyF,SAAO,MAGzD,cAACvF,GAAA,EAAD,UACI,cAAC,QAAD,CAAMlB,GAAE,mBAAcrF,EAAKX,SAA3B,SAAuCW,EAAKuD,SAGhD,eAACgD,GAAA,EAAD,CAAKC,GAAI,EAAT,UACKxG,EAAK+J,IADV,OACmB/J,EAAK4H,MADxB,QACoC5H,EAAK+J,IAAM/J,EAAK4H,OAAOqE,QAAQ,UAXtDkD,gBAwBjD,cAAC5I,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACS,GAAA,EAAD,UACI,eAACuD,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,UACI,cAAC2G,GAAA,EAAU1E,KAAX,UACI,iDAGJ,cAAC0E,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BvD,EAAKmP,mBAI1C,cAACxE,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,wBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BvD,EAAKoP,sBAI1C,cAACzE,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BvD,EAAKqP,iBAI1C,cAAC1E,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BvD,EAAK4N,mBAK1C,cAACjD,GAAA,EAAU1E,KAAX,UACK3G,GAAS,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,MAGzC,cAACqL,GAAA,EAAU1E,KAAX,UACI,cAAClC,GAAA,EAAD,CACI9E,KAAK,SACL+E,QAAQ,SACRT,UAAU,YACVwH,SAA6B,IAAnB/K,EAAKC,UACfiG,QAzHb,WACf/B,EJNmB,SAAC9C,GAAD,gDAAW,WAAO8C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLlF,KAAM5B,KAHoB,EAQ1B+G,IADazD,EAPa,EAO1BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbZ,SAiBPC,KAAM2G,KAAN,mBAEnBhK,EACAiD,GApB0B,gBAiBtBM,EAjBsB,EAiBtBA,KAMRT,EAAS,CACLlF,KAAM3B,GACN6B,QAASyF,IAGbT,EAAS,CACLlF,KAAMvD,EACNyD,QAASyF,IAGb9C,aAAaqE,WAAW,aAjCM,kDAqC9BhC,EAAS,CACLlF,KAAM1B,GACN4B,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAzCc,0DAAX,wDIMVwK,CAAY,CACjBhO,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBO,cAAeT,EAAKS,cACpB0O,WAAYnP,EAAKmP,WACjBC,cAAepP,EAAKoP,cACpBC,SAAUrP,EAAKqP,SACfzB,WAAY5N,EAAK4N,eA4GG,2C,gBCqEjB4B,OAnNf,YAA0C,IAAnBvF,EAAkB,EAAlBA,MAAOnH,EAAW,EAAXA,QACpB2M,EAAUxF,EAAMS,OAAOxG,GACvBC,EAAWe,cAFoB,EAKLvC,oBAAS,GALJ,oBAK9B+M,EAL8B,KAKpBC,EALoB,KAO/BrO,EAAe2D,aAAY,SAAAnG,GAAK,OAAIA,EAAMwC,gBACxCD,EAA0BC,EAA1BD,MAAO/B,EAAmBgC,EAAnBhC,MAAOJ,EAAYoC,EAAZpC,QAEhBsC,EAAWyD,aAAY,SAAAnG,GAAK,OAAIA,EAAM0C,YAC3BoO,EAAoCpO,EAA7CtC,QAA8B2Q,EAAerO,EAAxB7B,QAEvBiC,EAAeqD,aAAY,SAAAnG,GAAK,OAAIA,EAAM8C,gBAC/BkO,EAA4ClO,EAArD1C,QAAkC6Q,EAAmBnO,EAA5BjC,QAGzBgB,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAiDR,OA9CKzB,GAAYI,IACb+B,EAAM8N,WAAa9N,EAAME,WAAW2K,QAAO,SAACC,EAAKhM,GAAN,OAAegM,EAAMhM,EAAK4H,MAAQ5H,EAAK+J,MAAK,GAAGkC,QAAQ,IAgBtGhD,qBAAU,WL+BiB,IAAClF,EK7BnBvD,GACDmC,EAAQM,KAAK,WAGZ/B,GAASwO,GAAcxO,EAAMgG,MAAQyE,OAAO2D,IAAYM,GACzD5L,EAAS,CAAElF,KAAMlB,KACjBoG,EAAS,CAAElF,KAAMP,KAEjByF,GLqBoBD,EKrBKuL,ELqBN,yCAAQ,WAAOtL,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLlF,KAAMxB,KAHqB,EAQ3B2G,IADazD,EAPc,EAO3BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbX,SAiBRC,KAAMC,IAAN,sBACJT,EADI,KAEnBI,GAnB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAKRT,EAAS,CACLlF,KAAMvB,GACNyB,QAASyF,IAxBkB,kDA6B/BT,EAAS,CACLlF,KAAMtB,GACNwB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCe,0DAAR,2DKpBX1D,EAAMwM,SACTmC,OAAOC,OAGRN,GAAY,GA3BA,WACpB,IAAMO,EAASC,SAASC,cAAc,UACtCF,EAAOjR,KAAO,kBACdiR,EAAO3I,IAAM,2HAEb2I,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZX,GAAY,IAEhBQ,SAASI,KAAKC,YAAYN,GAgBlBO,MAKT,CAACtM,EAAU9C,EAAOoO,EAASI,EAAYE,IAWnC7Q,EACH,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAEnB,gCACI,yCAAY+B,EAAMqP,MAClB,eAACjK,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACgE,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,UACI,eAAC2G,GAAA,EAAU1E,KAAX,WACI,0CACA,8BAAG,4CAAH,IAA4B5E,EAAMP,KAAK4C,QACvC,8BAAG,6CAAwB,mBAAGoD,KAAI,iBAAYzF,EAAMP,KAAKyL,OAA9B,SAAwClL,EAAMP,KAAKyL,WAC9E,8BACI,gDACClL,EAAMnB,gBAAgBmO,QAF3B,MAEuChN,EAAMnB,gBAAgBqO,KACxD,KACAlN,EAAMnB,gBAAgBuO,WAJ3B,IAKH,KACQpN,EAAMnB,gBAAgByO,WAG1BtN,EAAMsP,YACH,eAAC,GAAD,CAAS3M,QAAQ,UAAjB,0BAAyC3C,EAAMuP,eAE3C,cAAC,GAAD,CAAS5M,QAAQ,UAAjB,8BAIZ,eAAC2G,GAAA,EAAU1E,KAAX,WACI,gDACA,8BACI,8CACC5E,EAAMZ,iBAEVY,EAAMwM,OACH,eAAC,GAAD,CAAS7J,QAAQ,UAAjB,qBAAoC3C,EAAMyM,UAEtC,cAAC,GAAD,CAAS9J,QAAQ,UAAjB,yBAKZ,eAAC2G,GAAA,EAAU1E,KAAX,WACI,6CAC6B,IAA5B5E,EAAME,WAAWyJ,OAAe,cAAC,GAAD,CAAShH,QAAQ,OAAjB,4BAGzB,cAAC2G,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,SACK3C,EAAME,WAAWhB,KAAI,SAACJ,EAAMmP,GAAP,OAClB,cAAC3E,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAAC6C,GAAA,EAAD,CAAOjC,IAAKpH,EAAKqH,MAAOkC,IAAKvJ,EAAKuD,KAAM8C,OAAK,EAACyF,SAAO,MAGzD,cAACvF,GAAA,EAAD,UACI,cAAC,QAAD,CAAMlB,GAAE,mBAAcrF,EAAKX,SAA3B,SAAuCW,EAAKuD,SAGhD,eAACgD,GAAA,EAAD,CAAKC,GAAI,EAAT,UACKxG,EAAK+J,IADV,OACmB/J,EAAK4H,MADxB,QACoC5H,EAAK+J,IAAM/J,EAAK4H,OAAOqE,QAAQ,UAXtDkD,gBAwBjD,cAAC5I,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACS,GAAA,EAAD,WACI,eAACuD,GAAA,EAAD,CAAW3G,QAAQ,QAAnB,UACI,cAAC2G,GAAA,EAAU1E,KAAX,UACI,iDAGJ,cAAC0E,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BlC,EAAM8N,mBAI3C,cAACxE,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,wBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BlC,EAAM+N,sBAI3C,cAACzE,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,mBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BlC,EAAMgO,iBAI3C,cAAC1E,GAAA,EAAU1E,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,CAAKnD,UAAU,YAAf,cAA6BlC,EAAMuM,oBAKzCvM,EAAMwM,QACJ,eAAClD,GAAA,EAAU1E,KAAX,WACK2J,GAAc,cAAC,GAAD,IAEbF,EAGM,cAAC,gBAAD,CACImB,OAAQxP,EAAMuM,WACdkD,UAhItB,SAACC,GAC3B5M,ELiDgB,SAACD,EAAI6M,GAAL,gDAAuB,WAAO5M,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvCF,EAAS,CACLlF,KAAMrB,KAH6B,EAQnCwG,IADazD,EAPsB,EAOnCD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbH,SAiBhBC,KAAM6I,IAAN,sBACJrJ,EADI,SAEnB6M,EACAzM,GApBmC,gBAiB/BM,EAjB+B,EAiB/BA,KAMRT,EAAS,CACLlF,KAAMpB,GACNsB,QAASyF,IAzB0B,kDA8BvCT,EAAS,CACLlF,KAAMnB,GACNqB,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCuB,0DAAvB,wDKjDPiM,CAASvB,EAASsB,OA2Ha,cAAC,GAAD,UAUfjB,GAAkB,cAAC,GAAD,IAClBnP,GAAYA,EAASyF,SAAW/E,EAAMwM,SAAWxM,EAAMsP,aACpD,cAAChG,GAAA,EAAU1E,KAAX,UACI,cAAClC,GAAA,EAAD,CACI9E,KAAK,SACLsE,UAAU,gBACV2C,QAxIjB,WACnB/B,ELqFoB,SAAC9C,GAAD,gDAAW,WAAO8C,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLlF,KAAMV,KAHqB,EAQ3B6F,IADazD,EAPc,EAO3BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbX,SAiBRC,KAAM6I,IAAN,sBACJlM,EAAMgG,IADF,aAEnB,GACA/C,GApB2B,gBAiBvBM,EAjBuB,EAiBvBA,KAMRT,EAAS,CACLlF,KAAMT,GACNW,QAASyF,IAzBkB,kDA8B/BT,EAAS,CACLlF,KAAMR,GACNU,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCe,0DAAX,wDKrFXkM,CAAa5P,KAoIU,6C,OCnHzB6P,OAlFf,YAAsC,IAAZpO,EAAW,EAAXA,QAEhBqB,EAAWe,cAEXlE,EAAWiE,aAAY,SAAAnG,GAAK,OAAIA,EAAMkC,YACpC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGhBN,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAGSwQ,EADElM,aAAY,SAAAnG,GAAK,OAAIA,EAAMoC,cACtCvB,QAGRyJ,qBAAU,WACFzI,GAAYA,EAASyF,QACrBjC,ExBwLa,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvBF,EAAS,CACLlF,KAAMvC,KAHa,EAQnB0H,IADazD,EAPM,EAOnBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbnB,SAiBAC,KAAMC,IAAN,cAEnBL,GAnBmB,gBAiBfM,EAjBe,EAiBfA,KAKRT,EAAS,CACLlF,KAAMtC,GACNwC,QAASyF,IAxBU,kDA6BvBT,EAAS,CACLlF,KAAMrC,GACNuC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCO,0DAAN,yDwBtLbjC,EAAQM,KAAK,YAGlB,CAACe,EAAUrB,EAASqO,EAAexQ,IAGtC,IAAMyQ,EAAgB,SAAClN,GAEf8L,OAAOqB,QAAQ,+CACflN,ExBoNc,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLlF,KAAMnC,KAHgB,EAQtBsH,IADazD,EAPS,EAOtBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbhB,SAiBHC,KAAM4M,OAAN,4BACEpN,EADF,KAEnBI,GAnBsB,gBAiBlBM,EAjBkB,EAiBlBA,KAKRT,EAAS,CACLlF,KAAMlC,GACNoC,QAASyF,IAxBa,kDA6B1BT,EAAS,CACLlF,KAAMjC,GACNmC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCU,0DAAR,wDwBpNLwM,CAAWrN,KAI5B,OACI,gCACI,uCACChF,EACM,cAAC,GAAD,IACDI,EACK,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE1B,eAACmO,GAAA,EAAD,CAAOC,SAAO,EAAC8D,UAAQ,EAACC,OAAK,EAAC9D,YAAU,EAACpK,UAAU,yBAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,4BAIR,gCACKtC,EAAMV,KAAI,SAAAO,GAAI,OACX,+BACI,6BAAKA,EAAKuG,MACV,6BAAKvG,EAAK4C,OACV,6BAAK5C,EAAKyL,QACV,6BAAKzL,EAAKsF,QACN,mBAAG7C,UAAU,eAAe2D,MAAO,CAAED,MAAO,WAExC,mBAAG1D,UAAU,eAAe2D,MAAO,CAAED,MAAO,WAGpD,+BACI,cAAC,iBAAD,CAAezB,GAAE,sBAAiB1E,EAAKuG,IAAtB,SAAjB,SACI,cAACtD,GAAA,EAAD,CAAQC,QAAQ,QAAQT,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAIrB,cAACQ,GAAA,EAAD,CAAQC,QAAQ,SAAST,UAAU,SAAS2C,QAAS,kBAAMkL,EAActQ,EAAKuG,MAA9E,SACI,mBAAG9D,UAAU,wBAlBhBzC,EAAKuG,iB,OCsDnCqK,OAvGf,YAA6C,IAAnBzH,EAAkB,EAAlBA,MAAOnH,EAAW,EAAXA,QAEvB6O,EAAS1H,EAAMS,OAAOxG,GAFY,EAIhBvB,mBAAS,IAJO,oBAIjCe,EAJiC,KAI3BoJ,EAJ2B,OAKdnK,mBAAS,IALK,oBAKjC4J,EALiC,KAK1BC,EAL0B,OAMV7J,oBAAS,GANC,oBAMjCyD,EANiC,KAMxBwL,EANwB,KAQlCzN,EAAWe,cAEXrE,EAAcoE,aAAY,SAAAnG,GAAK,OAAIA,EAAM+B,eACvCvB,EAAyBuB,EAAzBvB,MAAOJ,EAAkB2B,EAAlB3B,QAAS4B,EAASD,EAATC,KAElBK,EAAa8D,aAAY,SAAAnG,GAAK,OAAIA,EAAMqC,cAC/B0Q,EAAgE1Q,EAAvE7B,MAA6BwS,EAA0C3Q,EAAnDjC,QAAiC6S,EAAkB5Q,EAA3BxB,QAyBpD,OAvBAyJ,qBAAU,WAEF2I,GACA5N,EAAS,CAAElF,KAAM7B,KACjB0F,EAAQM,KAAK,oBAGRtC,EAAK4C,MAAQ5C,EAAKuG,MAAQyE,OAAO6F,IAGlC7E,EAAQhM,EAAK4C,MACb8I,EAAS1L,EAAKyL,OACdqF,EAAW9Q,EAAKsF,UAJhBjC,EAASF,GAAe0N,MAQjC,CAAC7Q,EAAM6Q,EAAQI,EAAejP,IAQ7B,gCACI,qBAAKS,UAAU,OAAf,SACA,eAAC,QAAD,CAAMiC,GAAG,kBAAkBjC,UAAU,0BAArC,UACI,cAAC,KAAD,CAAaA,UAAU,SAD3B,aAIA,cAAC,GAAD,UACI,sBAAKA,UAAU,+BAAf,UACA,2CACCuO,GAAiB,cAAC,GAAD,IACjBD,GAAe,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,IAE1C3S,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAEnD,eAAC0D,GAAA,EAAD,CAAMC,SApBJ,SAACC,GACnBA,EAAEC,iBACFgB,EzB+OkB,SAACrD,GAAD,gDAAU,WAAOqD,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACLlF,KAAMhC,KAHkB,EAQxBmH,IADazD,EAPW,EAOxBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbd,SAiBLC,KAAM6I,IAAN,4BACEzM,EAAKuG,IADP,KAEnBvG,EACAwD,GApBwB,gBAiBpBM,EAjBoB,EAiBpBA,KAMRT,EAAS,CACLlF,KAAM/B,KAGViH,EAAS,CACLlF,KAAM9C,EACNgD,QAASyF,IA7Be,kDAkC5BT,EAAS,CACLlF,KAAM9B,GACNgC,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAtCY,0DAAV,wDyB/OTiN,CAAW,CAAE3K,IAAKvG,EAAKuG,IAAK3D,OAAM6I,QAAOnG,cAkBlC,UAEI,eAACpD,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,mBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GAAD,OAAO4J,EAAQ5J,EAAEW,OAAOC,aAK1C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,4BACA,cAACxI,GAAA,EAAKS,QAAN,CACIxE,KAAK,QACL0E,YAAY,cACZG,MAAOyI,EACP3I,SAAU,SAACV,GAAD,OAAOsJ,EAAStJ,EAAEW,OAAOC,aAK3C,cAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACvI,GAAA,EAAK+L,MAAN,CACI9P,KAAK,WACL+P,MAAM,WACNC,QAAS7I,EACTxC,SAAU,SAACV,GAAD,OAAO0O,EAAW1O,EAAEW,OAAOoL,cAK7C,cAAClL,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,gC,OCyBbiO,OAnHf,YAAgD,IAAnBnP,EAAkB,EAAlBA,QAEnBqB,GAFqC,EAAT8F,MAEjB/E,eAEXrG,EAAcoG,aAAY,SAAAnG,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,MAAOD,EAASP,EAATO,KAEnCM,EAAgBuF,aAAY,SAAAnG,GAAK,OAAIA,EAAMY,iBAChCwS,EAA8DxS,EAAvER,QAA+BiT,EAAwCzS,EAA/CJ,MAA6B6R,EAAkBzR,EAA3BC,QAE9CC,EAAgBqF,aAAY,SAAAnG,GAAK,OAAIA,EAAMc,iBAChCwS,EAAuFxS,EAAhGV,QAA+BmT,EAAiEzS,EAAxEN,MAA6BgT,EAA2C1S,EAApDD,QAAiC4S,EAAmB3S,EAA5BJ,QAIpEmB,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAEJiC,EAAUE,EAAQO,SAASuG,OAC/BR,qBAAU,WACNjF,EAAS,CAAElF,KAAMvE,IAEZiG,EAASyF,SACVtD,EAAQM,KAAK,UAGbkP,EACAxP,EAAQM,KAAR,yBAA+BmP,EAAelL,IAA9C,UAEAlD,EAAS8E,GAAarG,MAG3B,CAACuB,EAAUrB,EAASnC,EAAUwQ,EAAemB,EAAeC,EAAgB3P,IAG/E,IAAMwO,EAAgB,SAAClN,GAEf8L,OAAOqB,QAAQ,kDACflN,ElBkDiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACLlF,KAAM7E,IAHmB,EAQzBgK,IADazD,EAPY,EAOzBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbb,SAiBNC,KAAM4M,OAAN,+BACKpN,EADL,KAEnBI,GAnByB,cAiBrBM,KAKRT,EAAS,CACLlF,KAAM5E,IAvBmB,kDA4B7B8J,EAAS,CACLlF,KAAM3E,EACN6E,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhCa,0DAAR,wDkBlDRyN,CAActO,KAQ/B,OACI,gCACI,eAACuC,GAAA,EAAD,CAAKlD,UAAU,qBAAf,UACI,cAACmD,GAAA,EAAD,UACI,4CAGJ,cAACA,GAAA,EAAD,CAAKnD,UAAU,aAAf,SACI,eAACQ,GAAA,EAAD,CAAQR,UAAU,OAAO2C,QAZZ,WACzB/B,ElBqFqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACLlF,KAAM1E,IAHiB,EAQvB6J,IADazD,EAPU,EAOvBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbf,SAiBJC,KAAM2G,KAAN,wBAEnB,GACA/G,GApBuB,gBAiBnBM,EAjBmB,EAiBnBA,KAKRT,EAAS,CACLlF,KAAMzE,EACN2E,QAASyF,IAxBc,kDA6B3BT,EAAS,CACLlF,KAAMxE,EACN0E,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCW,0DAAN,0DkB1ET,UACI,mBAAGxB,UAAU,gBADjB,0BAMP2O,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASnO,QAAQ,SAAjB,SAA2BmO,IAG1CC,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASrO,QAAQ,SAAjB,SAA2BqO,IAE1CnT,EACM,cAAC,GAAD,IACDI,EACK,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE1B,gCACI,eAACmO,GAAA,EAAD,CAAOC,SAAO,EAAC8D,UAAQ,EAACC,OAAK,EAAC9D,YAAU,EAACpK,UAAU,yBAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,0CACA,uCACA,4BAIR,gCACKxE,EAASwB,KAAI,SAAAf,GAAO,OACjB,+BACI,6BAAKA,EAAQ6H,MACb,6BAAK7H,EAAQkE,OACb,mCAAMlE,EAAQuI,SACd,6BAAKvI,EAAQiT,WACb,6BAAKjT,EAAQkT,QAEb,+BACI,cAAC,iBAAD,CAAelN,GAAE,yBAAoBhG,EAAQ6H,IAA5B,SAAjB,SACI,cAACtD,GAAA,EAAD,CAAQC,QAAQ,QAAQT,UAAU,SAAlC,SACI,mBAAGA,UAAU,oBAIrB,cAACQ,GAAA,EAAD,CAAQC,QAAQ,SAAST,UAAU,SAAS2C,QAAS,kBAAMkL,EAAc5R,EAAQ6H,MAAjF,SACI,mBAAG9D,UAAU,wBAfhB/D,EAAQ6H,aAsB7B,cAAC,GAAD,CAAUhI,MAAOA,EAAOD,KAAMA,EAAMgH,SAAS,W,OCwK1DuM,OAlRf,YAAgD,IAAnB1I,EAAkB,EAAlBA,MAAOnH,EAAW,EAAXA,QAE1BsI,EAAYnB,EAAMS,OAAOxG,GAFY,EAInBvB,mBAAS,IAJU,oBAIpCe,EAJoC,KAI9BoJ,EAJ8B,OAKjBnK,mBAAS,GALQ,oBAKpCoF,EALoC,KAK7B6K,EAL6B,OAMjBjQ,mBAAS,IANQ,oBAMpC6E,EANoC,KAM7BqL,EAN6B,OAOflQ,mBAAS,IAPM,oBAOpC8G,EAPoC,KAO5BqJ,EAP4B,OASjBnQ,mBAAS,IATQ,oBASpC+P,EAToC,KAS7BK,EAT6B,OAUXpQ,mBAAS,IAVE,oBAUpC8P,EAVoC,KAU1BO,EAV0B,OAWHrQ,mBAAS,GAXN,oBAWpCkI,EAXoC,KAWtBoI,EAXsB,OAYLtQ,mBAAS,IAZJ,oBAYpCiI,EAZoC,KAYvBsI,EAZuB,OAaTvQ,oBAAS,GAbA,oBAapCwQ,EAboC,KAazBC,EAbyB,KAerCjP,EAAWe,cAEX3F,EAAiB0F,aAAY,SAAAnG,GAAK,OAAIA,EAAMS,kBAC1CD,EAA4BC,EAA5BD,MAAOJ,EAAqBK,EAArBL,QAASM,EAAYD,EAAZC,QAElBK,EAAgBoF,aAAY,SAAAnG,GAAK,OAAIA,EAAMe,iBAClCgS,GAAgEhS,EAAvEP,MAA6BwS,GAA0CjS,EAAnDX,QAAiC6S,GAAkBlS,EAA3BF,QAGpDyJ,qBAAU,WAEF2I,IACA5N,EAAS,CAAElF,KAAMnE,IACjBgI,EAAQM,KAAK,uBAER5D,EAAQkE,MAAQlE,EAAQ6H,MAAQyE,OAAOV,IAGxC0B,EAAQtN,EAAQkE,MAChBkP,EAASpT,EAAQuI,OACjB8K,EAASrT,EAAQgI,OACjBqL,EAASrT,EAAQiK,QAEjBsJ,EAASvT,EAAQkT,OACjBM,EAAYxT,EAAQiT,UACpBQ,EAAgBzT,EAAQqL,cACxBqI,EAAe1T,EAAQoL,cAVvBzG,EAAS+E,GAAmBkC,MAiBrC,CAACjH,EAAU3E,EAAS4L,EAAWtI,EAASiP,KAE3C,IAeMsB,GAAiB,yCAAG,WAAOnQ,GAAP,wBAAAmB,EAAA,6DAChBiP,EAAOpQ,EAAEW,OAAO0P,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAActI,GAE9BgI,GAAa,GAPS,SAUZ9O,EAAS,CACXC,QAAS,CACL,eAAgB,wBAZN,SAgBKG,KAAM2G,KAAK,wBAAyBmI,EAAUlP,GAhBnD,gBAgBVM,EAhBU,EAgBVA,KAGRiO,EAASjO,GACTwO,GAAa,GApBK,kDAuBlBA,GAAa,GAvBK,0DAAH,sDA2BjBO,GAAmB,yCAAG,WAAOzQ,GAAP,wBAAAmB,EAAA,6DAClBiP,EAAOpQ,EAAEW,OAAO0P,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,SAAUJ,GAC1BE,EAASE,OAAO,aAActI,GAE9BgI,GAAa,GAPW,SAUd9O,EAAS,CACXC,QAAS,CACL,eAAgB,wBAZJ,SAgBGG,KAAM2G,KAAK,wBAAyBmI,EAAUlP,GAhBjD,gBAgBZM,EAhBY,EAgBZA,KAGRkO,EAAUlO,GACVwO,GAAa,GApBO,kDAuBpBA,GAAa,GAvBO,0DAAH,sDA4BzB,OACI,gCACI,qBAAK7P,UAAU,OAAf,SACA,eAAC,QAAD,CAAMiC,GAAG,qBAAqBjC,UAAU,0BAAxC,UACI,cAAC,KAAD,CAAaA,UAAU,SAD3B,aAKA,cAAC,GAAD,UACA,sBAAKA,UAAU,8BAAf,UACI,8CACCuO,IAAiB,cAAC,GAAD,IACjBD,IAAe,cAAC,GAAD,CAAS7N,QAAQ,SAAjB,SAA2B6N,KAE1C3S,EAAU,cAAC,GAAD,IAAaI,EAAQ,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAEnD,eAAC0D,GAAA,EAAD,CAAMC,SAtFJ,SAACC,GACnBA,EAAEC,iBACFgB,EnBiHqB,SAAC3E,GAAD,gDAAa,WAAO2E,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACLlF,KAAMtE,IAHwB,EAQ9ByJ,IADazD,EAPiB,EAO9BD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAbR,SAiBXC,KAAM6I,IAAN,+BACK/N,EAAQ6H,IADb,KAEnB7H,EACA8E,GApB8B,gBAiB1BM,EAjB0B,EAiB1BA,KAKRT,EAAS,CACLlF,KAAMrE,EACNuE,QAASyF,IAIbT,EAAS,CACLlF,KAAM/E,EACNiF,QAASyF,IA9BqB,kDAmClCT,EAAS,CACLlF,KAAMpE,EACNsE,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAvCkB,0DAAb,wDmBjHZ6O,CAAc,CACnBvM,IAAK+D,EACL1H,OACAqE,QACAP,QACAiC,SACAiJ,QACAD,WACA5H,eACAD,kBA2EY,UAEI,eAAC5H,GAAA,EAAKsI,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,mBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,OACL0E,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GAAD,OAAO4J,EAAQ5J,EAAEW,OAAOC,aAK1C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,oBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,SACL0E,YAAY,cACZG,MAAOiE,EACPnE,SAAU,SAACV,GAAD,OAAO0P,EAAS1P,EAAEW,OAAOC,aAM3C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,oBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,OACL0E,YAAY,cACZG,MAAO0D,EACP5D,SAAU,SAACV,GAAD,OAAO2P,EAAS3P,EAAEW,OAAOC,UAIvC,cAACd,GAAA,EAAK6Q,KAAN,CACI3P,GAAG,aACH8K,MAAM,cACN8E,QAAM,EACNlQ,SAAUyP,KAIbF,GAAa,cAAC,GAAD,OAMlB,eAACnQ,GAAA,EAAKsI,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,qBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,OACL0E,YAAY,eACZG,MAAO2F,EACP7F,SAAU,SAACV,GAAD,OAAO4P,EAAU5P,EAAEW,OAAOC,UAIxC,cAACd,GAAA,EAAK6Q,KAAN,CACI3P,GAAG,cACH8K,MAAM,cACN8E,QAAM,EACNlQ,SAAU+P,KAIbR,GAAa,cAAC,GAAD,OAKlB,eAACnQ,GAAA,EAAKsI,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,oBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,OACL0E,YAAY,cACZG,MAAO4O,EACP9O,SAAU,SAACV,GAAD,OAAO6P,EAAS7P,EAAEW,OAAOC,aAK3C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,oBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,SACL0E,YAAY,cACZG,MAAO+G,EACPjH,SAAU,SAACV,GAAD,OAAO+P,EAAgB/P,EAAEW,OAAOC,aAKlD,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,uBACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,OACL0E,YAAY,iBACZG,MAAO2O,EACP7O,SAAU,SAACV,GAAD,OAAO8P,EAAY9P,EAAEW,OAAOC,aAK9C,eAACd,GAAA,EAAKsI,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACvI,GAAA,EAAKwI,MAAN,0BACA,cAACxI,GAAA,EAAKS,QAAN,CAEIxE,KAAK,OACL0E,YAAY,oBACZG,MAAO8G,EACPhH,SAAU,SAACV,GAAD,OAAOgQ,EAAehQ,EAAEW,OAAOC,aAMjD,cAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,gC,OCtLb+P,OAnFf,YAAuC,IAAZjR,EAAW,EAAXA,QAEjBqB,EAAWe,cAEXvD,EAAYsD,aAAY,SAAAnG,GAAK,OAAIA,EAAM6C,aACrCzC,EAA2ByC,EAA3BzC,QAASI,EAAkBqC,EAAlBrC,MAAOoC,EAAWC,EAAXD,OAGhBf,EADUsE,aAAY,SAAAnG,GAAK,OAAIA,EAAM4B,aACrCC,SAcR,OAVAyI,qBAAU,WACFzI,GAAYA,EAASyF,QACrBjC,EVwNc,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACLlF,KAAMb,KAHc,EAQpBgG,IADazD,EAPO,EAOpBD,UAAaC,SAGX2D,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAY7D,EAAS8D,SAblB,SAiBDC,KAAMC,IAAN,eAEnBL,GAnBoB,gBAiBhBM,EAjBgB,EAiBhBA,KAKRT,EAAS,CACLlF,KAAMZ,GACNc,QAASyF,IAxBW,kDA6BxBT,EAAS,CACLlF,KAAMX,GACNa,QAAS,KAAM0F,UAAY,KAAMA,SAASD,KAAKE,OACzC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCQ,0DAAN,yDUtNdjC,EAAQM,KAAK,YAGlB,CAACe,EAAUrB,EAASnC,IAInB,gCACI,wCACCzB,EACM,cAAC,GAAD,IACDI,EACK,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE1B,eAACmO,GAAA,EAAD,CAAOC,SAAO,EAAC8D,UAAQ,EAACC,OAAK,EAAC9D,YAAU,EAACpK,UAAU,0BAAnD,UACI,gCACI,+BACI,oCACA,sCACA,sCACA,uCACA,sCACA,2CACA,4BAIR,gCACK7B,EAAOnB,KAAI,SAAAc,GAAK,OACb,+BACI,6BAAKA,EAAMgG,MACX,6BAAKhG,EAAMP,MAAQO,EAAMP,KAAK4C,OAC9B,6BAAKrC,EAAM6J,UAAUC,UAAU,EAAG,MAClC,mCAAM9J,EAAMuM,cAEZ,6BAAKvM,EAAMwM,OACPxM,EAAMyM,OAAO3C,UAAU,EAAG,IAEtB,mBAAG5H,UAAU,eAAe2D,MAAO,CAAED,MAAO,WAIpD,6BAAK5F,EAAMsP,YACPtP,EAAMuP,YAAYzF,UAAU,EAAG,IAE3B,mBAAG5H,UAAU,eAAe2D,MAAO,CAAED,MAAO,WAIpD,6BACI,cAAC,iBAAD,CAAezB,GAAE,iBAAYnE,EAAMgG,KAAnC,SACI,cAACtD,GAAA,EAAD,CAAQC,QAAQ,QAAQT,UAAU,SAAlC,2BAtBHlC,EAAMgG,iB,OCFpC2M,OA/Bf,WACE,OACE,eAAC,cAAD,WACE,cAAC,GAAD,IACA,sBAAMzQ,UAAU,kBAAhB,SACE,eAACgC,GAAA,EAAD,WACE,cAAC,KAAD,CAAO0O,KAAK,IAAIC,UAAWvK,GAAYwK,OAAK,IAC5C,cAAC,KAAD,CAAOF,KAAK,SAASC,UAAW5H,KAChC,cAAC,KAAD,CAAO2H,KAAK,YAAYC,UAAWrH,KACnC,cAAC,KAAD,CAAOoH,KAAK,WAAWC,UAAW9G,KAClC,cAAC,KAAD,CAAO6G,KAAK,YAAYC,UAAW9F,KACnC,cAAC,KAAD,CAAO6F,KAAK,cAAcC,UAAWhF,KACrC,cAAC,KAAD,CAAO+E,KAAK,aAAaC,UAAW1E,KACpC,cAAC,KAAD,CAAOyE,KAAK,WAAWC,UAAWrF,KAClC,cAAC,KAAD,CAAOoF,KAAK,eAAeC,UAAWlK,KACtC,cAAC,KAAD,CAAOiK,KAAK,aAAaC,UAAWrI,KAEpC,cAAC,KAAD,CAAOoI,KAAK,kBAAkBC,UAAWhD,KACzC,cAAC,KAAD,CAAO+C,KAAK,uBAAuBC,UAAWxC,KAE9C,cAAC,KAAD,CAAOuC,KAAK,qBAAqBC,UAAWjC,KAC5C,cAAC,KAAD,CAAOgC,KAAK,0BAA0BC,UAAWvB,KAEjD,cAAC,KAAD,CAAOsB,KAAK,mBAAmBC,UAAWH,UAG9C,cAAC,GAAD,QCpCSK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAD,CAAUxS,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEF6N,SAAS4E,eAAe,SAM1BX,M","file":"static/js/main.bff1416e.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {FaSearch} from 'react-icons/fa'\r\n\r\nimport './SearchBox.css'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} className=\"search-form\" inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                placeholder=\"Search trending things...\"\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='ml-sm-5'\r\n\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='search'\r\n                className='py-2 px-3'\r\n            >\r\n                <FaSearch />\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nimport {BiTrendingUp} from 'react-icons/bi'\r\n\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className='header-bar' bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand className=\"brand-name\">\r\n                            <BiTrendingUp className='brand-logo mr-2'/>\r\n                            Trend Store\r\n                        </Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\" className=\"nav-bar\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link >\r\n                                    <div className=\"mx-2 d-flex justify-content-center align-items-center\">\r\n                                        <i className=\"fas fa-shopping-bag mr-2\"></i>\r\n                                        <span>Cart</span>\r\n                                    </div>\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown  className=\"mx-2 d-flex justify-self-center align-self-center\"\r\n                                 title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link>\r\n                                                <div className=\"mx-2 d-flex justify-content-center align-items-center\">\r\n                                                    <i className=\"fas fa-user-circle mr-2\"></i>\r\n                                                    <span>Login</span>\r\n                                                </div>\r\n                                        </Nav.Link> \r\n                                    </LinkContainer>\r\n                                )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenue'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { siReact } from 'simple-icons/icons';\r\nimport './Footer.css';\r\nimport {FaReact, FaBootstrap, FaPaypal} from 'react-icons/fa';\r\nimport {SiDjango, SiPostgresql} from 'react-icons/si';\r\nimport {BiTrendingUp} from 'react-icons/bi'\r\n\r\nfunction Footer() {\r\n\r\n    const techIcons = [\r\n        <FaReact />,\r\n        <SiDjango />,\r\n        <SiPostgresql />,\r\n        <FaBootstrap />,\r\n        <FaPaypal />\r\n    ]\r\n\r\n\tconst techUsed = [\r\n\t\t'React',\r\n\t\t'Django',\r\n\t\t'PostgreSQL',\r\n\t\t'Bootstrap',\r\n        'PayPal API'\r\n\t]\r\n\t\r\n    const phone = \"999 111 999\"\r\n\tconst email = \"hemantsingh .buenodev @gmail.com\"\r\n    \r\n    const githubID = \"https://github.com/amifunny/\"\r\n    const angelLink = \"https://angel.com\"\r\n\r\n    return (\r\n        <footer>\r\n\r\n            <Container className='footer-bar' fluid>\r\n            <Container>\r\n            \t<Row>\r\n            \t\t<Col className=\"footer-col\" md={5}>\r\n            \t\t\t<div className=\"footer-logo\">\r\n                            <BiTrendingUp className='mr-2' />\r\n                            Trend Store\r\n                        </div>\r\n            \t\t\t<div>Contact - {phone}</div>\r\n            \t\t\t<div>Email - {email}</div>\r\n            \t\t</Col>\r\n            \t\t<Col className=\"footer-col\" md={5}>\r\n            \t\t\t<div>Technologies used</div>\r\n            \t\t\t{\r\n            \t\t\t\ttechUsed.map((tech,i)=>(\r\n\t            \t\t\t\t<div key={i}>\r\n                                    <span className=\"mr-2\">{techIcons[i]}</span>\r\n\t\t            \t\t\t\t<span>{tech}</span>\r\n\t\t            \t\t\t</div>\r\n        \t\t\t\t\t))\r\n            \t\t\t}\r\n            \t\t</Col>\r\n            \t\t<Col className=\"footer-col\" md={2}>\r\n            \t\t\t<div>Follow us</div>\r\n            \t\t\t<div>\r\n            \t\t\t\t<div>\r\n                                <a href={githubID} className=\"footer-link\"\r\n                        \t\ttarget=\"_blank\">Github</a>\r\n                            </div>\r\n            \t\t\t\t<div>\r\n                                <a href={angelLink} className=\"footer-link\"\r\n                                target=\"_blank\">Angel</a>\r\n                            </div>\r\n        \t\t\t\t</div>\r\n            \t\t</Col>\r\n                </Row>\r\n            </Container>\r\n            </Container>\r\n            <Container className='footer-make-tag' fluid>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">\r\n                    \tMade by <a href={githubID} className=\"footer-link\"\r\n                    \ttarget=\"_blank\">amifunny</a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            </Container>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <div>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            </div>\r\n\r\n            <div>\r\n                <span>{text && text}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Product.css'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"product-card my-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img className=\"product-card-img\" src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport './Paginate.css';\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination className='center-flex'>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nimport './ProductCarousel.css'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n            <div className='carousal-container mb-5'>\r\n                <Carousel pause='hover' interval='10000000'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image className=\"banner-image\"\r\n                                src={product.banner} alt={product.name} fluid />\r\n                                {/*<Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>*/}\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            </div>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport {BiArrowBack} from 'react-icons/bi'\r\n\r\nimport './ProductScreen.css'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'><BiArrowBack/> Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6} className='mt-3'>\r\n                                    <Image className='product-full-image' src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n                                <Col md={6} className='mt-3'>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <h3>{product.name}</h3>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                Price: ${product.price}\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                Description: {product.description}\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Col>\r\n\r\n\r\n                                    <Col md={12}>\r\n                                        <Card>\r\n                                            <ListGroup variant='flush'>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Price:</Col>\r\n                                                        <Col>\r\n                                                            <strong>${product.price}</strong>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Status:</Col>\r\n                                                        <Col>\r\n                                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                                {product.countInStock > 0 && (\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Qty</Col>\r\n                                                            <Col xs='auto' className='my-1'>\r\n                                                                <Form.Control\r\n                                                                    as=\"select\"\r\n                                                                    value={qty}\r\n                                                                    onChange={(e) => setQty(e.target.value)}\r\n                                                                >\r\n                                                                    {\r\n\r\n                                                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                            <option key={x + 1} value={x + 1}>\r\n                                                                                {x + 1}\r\n                                                                            </option>\r\n                                                                        ))\r\n                                                                    }\r\n\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                )}\r\n\r\n\r\n                                                <ListGroup.Item>\r\n                                                    <Button\r\n                                                        onClick={addToCartHandler}\r\n                                                        className='btn-block'\r\n                                                        disabled={product.countInStock == 0}\r\n                                                        type='button'>\r\n                                                        Add to Cart\r\n                                                    </Button>\r\n                                                </ListGroup.Item>\r\n                                            </ListGroup>\r\n                                        </Card>\r\n                                    </Col>        \r\n                            \r\n                                </Row>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row>\r\n                                <Col md={12} className='my-5'>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nimport './CartScreen.css'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} className='price-tag'>\r\n                                            ${item.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            <span className=\"price-tag\">\r\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                            </span>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            variant='golden'\r\n                            className='checkout-button btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nimport './LoginScreen.css'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n        <div className='login-box py-5 px-5'>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nimport './RegisterScreen.css'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n        <div className=\"register-box py-5 px-5\">\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nimport './ProfileScreen.css'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={4}>\r\n            <div className='profile-box p-5 my-3 mx-2'>\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </div>\r\n            </Col>\r\n\r\n            <Col md={8}>\r\n                <div className='order-detail-box p-5 my-3 mx-2'>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport './CheckoutSteps.css'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-3 checkout-steps'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nimport './ShippingScreen.css'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n        <div>\r\n            <CheckoutSteps step1 step2 />\r\n            <div className=\"shipping-box my-3 p-5\">\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n            </div>\r\n            \r\n        </div>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nimport './PaymentScreen.css'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form className=\"payment-box my-3 p-5\" onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nimport './PlaceOrderScreen.css'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col md={6}>\r\n                    <CheckoutSteps step1 step2 step3 step4 />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col className='price-tag'>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col className='price-tag'>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col className='price-tag'>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col className='price-tag'>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    variant='golden'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nimport './OrderScreen.css'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AcGtOfoUYYctQ8Gsgkuql9WtY99YfLmXzZU3hM43Cz_Ui2Gjk6SLHeBh8_aTuOKlMNJr9d5_xP6Z6qDM'\r\n        \r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col className='price-tag'>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col className='price-tag'>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col className='price-tag'>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col className='price-tag'>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nimport './UserListScreen.css'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm user-list-box'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {users.map(user => (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\nimport {BiArrowBack} from 'react-icons/bi'\r\n\r\nimport './UserEditScreen.css'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='my-3'>\r\n            <Link to='/admin/userlist' className=\"edit-user-box px-3 py-3\">\r\n                <BiArrowBack className='mr-3'/> Back\r\n            </Link>\r\n            </div>\r\n            <FormContainer>\r\n                <div className='py-5 px-3 my-3 edit-user-box'>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    label='Is Admin'\r\n                                    checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </div>\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nimport './ProductListScreen.css'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm prod-list-box'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport {BiArrowBack} from 'react-icons/bi'\r\n\r\nimport './ProductEditScreen.css'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [banner, setBanner] = useState('')\r\n\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setImage(product.banner)\r\n\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            banner,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const uploadBannerHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('banner', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/banner/', formData, config)\r\n\r\n\r\n            setBanner(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className='my-3'>\r\n            <Link to='/admin/productlist' className=\"prod-edit-box px-3 py-3\">\r\n                <BiArrowBack className='mr-3'/> Back\r\n            </Link>\r\n            </div>\r\n\r\n            <FormContainer>\r\n            <div className='prod-edit-box px-3 py-5 m-3'>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            {/*---------------*/}\r\n\r\n                            <Form.Group controlId='banner'>\r\n                                <Form.Label>Banner</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter banner'\r\n                                    value={banner}\r\n                                    onChange={(e) => setBanner(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='banner-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadBannerHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n            </div>\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nimport './OrderListScreen.css'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='order-list-box table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"app-layout py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}